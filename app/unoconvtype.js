// Generated by CoffeeScript 1.8.0
var PdfType, UnoconvType, childpr, fs, path, settings;

fs = require("fs-extra");

path = require("path");

childpr = require("child_process");

settings = require("./settings");

PdfType = require("./pdftype");

UnoconvType = (function() {
  function UnoconvType(srcfile, destfile) {
    this.options = [];
    this.srcfile = path.normalize(srcfile);
    if (destfile) {
      this.destfile = path.normalize(destfile);
    } else {
      this.destfile = srcfile + ".html";
    }
  }

  UnoconvType.prototype.tune = function(opts) {
    if (!opts) {
      return;
    }
    if (typeof opts === "string") {
      if (!settings.unoconv[opts]) {
        return "Предустановленый набор настроек не найден";
      }
      this.options = settings.unoconv[opts];
      return;
    }
    if (Array.isArray(opts)) {
      this.options = this.options.concat(opts);
      return;
    }
    return "Опции должны быть именем предустановленных настроек, либо массивом строк с опциями";
  };

  UnoconvType.prototype["do"] = function(cb) {
    var args, child, error, now, randomName, tmpfile;
    error = "";
    now = new Date();
    randomName = now.getYear() + "_" + now.getMonth() + "_" + now.getDate() + "_" + process.pid + "_" + (Math.random() * 0x100000000 + 1).toString(36) + ".pdf";
    tmpfile = path.normalize(settings.tmp_dir + ("/" + randomName));
    args = ["-o", tmpfile, "--format=pdf"].concat(this.options);
    args.push(this.srcfile);
    child = childpr.spawn("unoconv", args);
    child.stderr.on("data", function(chunk) {
      return error += chunk.toString();
    });
    return child.on("close", (function(_this) {
      return function(code, signal) {
        var pdft;
        if (code !== 0) {
          return cb(error);
        }
        pdft = new PdfType(tmpfile, _this.destfile);
        pdft.tune("default");
        return pdft["do"](function(err) {
          return fs.unlink(tmpfile, function() {
            return cb(err);
          });
        });
      };
    })(this));
  };

  return UnoconvType;

})();

module.exports = UnoconvType;
